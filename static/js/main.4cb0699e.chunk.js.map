{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","name","email","CardList","robots","map","user","i","searchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","SearchBox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAACC,GACV,OACI,cAAC,WAAD,UACA,sBAAKC,UAAU,uDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,GAAhC,mBACrB,gCACA,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,iBCKPC,EAXE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,cAAC,WAAD,UACA,8BACCA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OAAO,cAAC,EAAD,CAAcP,GAAII,EAAOG,GAAGP,GAAIC,KAAMG,EAAOG,GAAGN,KAAMC,MAAOE,EAAOG,GAAGL,OAA5DK,WCIXC,EAVG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,cAAC,WAAD,UACA,qBAAKb,UAAU,MAAf,SACA,uBAAOA,UAAU,uCAAuCc,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,SCMrGI,EAVA,SAAClB,GACZ,OACI,cAAC,WAAD,UACI,qBAAKmB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAO,SAAnE,SACMtB,EAAMuB,cCgBTC,E,kDAnBX,WAAYxB,GAAQ,IAAD,8BACf,cAAMA,IACDyB,MAAQ,CACTC,UAAW,GAHA,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,oBAAIzB,UAAY,KAAhB,qCAEJ4B,KAAK7B,MAAMuB,a,GAhBCQ,aCiDZC,G,wDA1CX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAb1C,EAAKX,MAAO,CACRjB,OAAQ,GACRK,YAAa,IAJP,E,gEAQM,IAAD,OACfwB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAOjC,IAAD,OACCC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAnC,GAC5C,OAAOA,EAAOH,KAAKuC,cAAcC,SAAS,EAAKpB,MAAMZ,YAAY+B,kBAErE,OAAgC,IAA7Bf,KAAKJ,MAAMjB,OAAOsC,OACV,oBAAI7C,UAAU,KAAd,wBAGP,cAAC,WAAD,UACI,sBAAKA,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC8C,EAAD,CAAWjC,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUzB,OAAQkC,iB,GAjCxBX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4cb0699e.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst Card = (props) => {\n    return (\n        <Fragment>\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 '>\n            <img alt='robots' src={`https://robohash.org/${props.id}?size=200x200`} />\n            <div>\n            <h2>{props.name}</h2>\n            <p>{props.email}</p>\n            </div>\n        </div>\n        </Fragment>\n    ); \n\n}\n\nexport default Card;","import React, {Fragment} from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <Fragment>\n        <div>\n        {robots.map((user, i) => {\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>})}\n        </div>\n    </Fragment>\n    )\n}\n\nexport default CardList;","import React, { Fragment } from 'react';\n\nconst searchBox = ({searchfield, searchChange}) => {\n    return(\n        <Fragment>\n        <div className='pa2'>\n        <input className='pa3 ba b--green bg-lightest-blue br3' type='search' placeholder='Search Robots' onChange={searchChange}/>\n        </div>\n        </Fragment>\n    )\n}\n\nexport default searchBox;","import React, { Fragment } from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <Fragment>\n            <div style={{overflow: 'scroll', border: '3px solid black', height:'600px'}}>\n                { props.children }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\n\nclass ErrorBoundry extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError : false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({ hasError: true})\n    }\n\n    render() {\n        if(this.state.hasError) {\n            return <h1 className = 'tc'>Ooops, that is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\nexport default ErrorBoundry;","import React, { Component, Fragment } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n \n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state= {\n            robots: [],\n            searchfield: '',\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users}));\n    }\n\n    onSearchChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render() {\n        const filteredRobots = this.state.robots.filter(robots => {\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n        })\n        if(this.state.robots.length === 0) {\n            return <h1 className='tc'>Loading...</h1>\n        } else {\n        return (\n            <Fragment>\n                <div className='tc'>\n                <h1 className='f1'>RoboFriends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <ErrorBoundry>\n                        <CardList robots={filteredRobots}/>\n                    </ErrorBoundry>    \n                </Scroll>\n                </div>\n            </Fragment>\n            )\n        }\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}